[DEFAULT]
support-files =
  android.json
  file_drawImage_document_domain.html
  image_anim-gr.gif
  image_anim-gr.png
  image_anim-poster-gr.png
  image_broken.png
  image_ggrr-256x256.png
  image_green-16x16.png
  image_green-1x1.png
  image_green-redirect
  image_green-redirect^headers^
  image_green.png
  image_red-16x16.png
  image_red.png
  image_redtransparent.png
  image_rgrg-256x256.png
  image_rrgg-256x256.png
  image_transparent.png
  image_transparent50.png
  image_yellow.png
  image_yellow75.png

[test_2d.clearRect.image.offscreen.html]
[test_2d.clip.winding.html]
[test_2d.composite.canvas.color-burn.html]
[test_2d.composite.canvas.color-dodge.html]
[test_2d.composite.canvas.color.html]
[test_2d.composite.canvas.darken.html]
[test_2d.composite.canvas.destination-atop.html]
[test_2d.composite.canvas.destination-in.html]
[test_2d.composite.canvas.difference.html]
[test_2d.composite.canvas.exclusion.html]
[test_2d.composite.canvas.hard-light.html]
[test_2d.composite.canvas.hue.html]
[test_2d.composite.canvas.lighten.html]
[test_2d.composite.canvas.luminosity.html]
[test_2d.composite.canvas.multiply.html]
[test_2d.composite.canvas.overlay.html]
[test_2d.composite.canvas.saturation.html]
[test_2d.composite.canvas.screen.html]
[test_2d.composite.canvas.soft-light.html]
[test_2d.composite.canvas.source-in.html]
[test_2d.composite.canvas.source-out.html]
[test_2d.composite.image.destination-atop.html]
[test_2d.composite.image.destination-in.html]
[test_2d.composite.image.source-in.html]
[test_2d.composite.image.source-out.html]
[test_2d.composite.solid.color-burn.html]
[test_2d.composite.solid.color-dodge.html]
[test_2d.composite.solid.color.html]
[test_2d.composite.solid.xor.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.solid.lighter.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.transparent.xor.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.transparent.lighter.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.image.xor.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.image.lighter.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.canvas.xor.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.canvas.lighter.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.clip.xor.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.clip.lighter.html]
skip-if = true # xor and lighter aren't well handled by cairo; they mostly work, but we don't want to test that
[test_2d.composite.solid.darken.html]
[test_2d.composite.solid.difference.html]
[test_2d.composite.solid.exclusion.html]
[test_2d.composite.solid.hard-light.html]
[test_2d.composite.solid.hue.html]
[test_2d.composite.solid.lighten.html]
[test_2d.composite.solid.luminosity.html]
[test_2d.composite.solid.multiply.html]
[test_2d.composite.solid.overlay.html]
[test_2d.composite.solid.saturation.html]
[test_2d.composite.solid.screen.html]
[test_2d.composite.solid.soft-light.html]
[test_2d.composite.uncovered.fill.color-burn.html]
[test_2d.composite.uncovered.fill.color-dodge.html]
[test_2d.composite.uncovered.fill.color.html]
[test_2d.composite.uncovered.fill.darken.html]
[test_2d.composite.uncovered.fill.difference.html]
[test_2d.composite.uncovered.fill.exclusion.html]
[test_2d.composite.uncovered.fill.hard-light.html]
[test_2d.composite.uncovered.fill.hue.html]
[test_2d.composite.uncovered.fill.lighten.html]
[test_2d.composite.uncovered.fill.luminosity.html]
[test_2d.composite.uncovered.fill.multiply.html]
[test_2d.composite.uncovered.fill.overlay.html]
[test_2d.composite.uncovered.fill.saturation.html]
[test_2d.composite.uncovered.fill.screen.html]
[test_2d.composite.uncovered.fill.soft-light.html]
[test_2d.composite.uncovered.fill.source-in.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.composite.uncovered.fill.destination-in.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.composite.uncovered.fill.source-out.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.composite.uncovered.fill.destination-atop.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.composite.uncovered.pattern.source-in.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.composite.uncovered.pattern.destination-in.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.composite.uncovered.pattern.source-out.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.composite.uncovered.pattern.destination-atop.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.composite.uncovered.image.destination-atop.html]
skip-if = suite && os == "linux" # This test fails in Suite on Linux for some reason, disable it there
[test_2d.composite.uncovered.image.destination-in.html]
[test_2d.composite.uncovered.image.source-in.html]
[test_2d.composite.uncovered.image.source-out.html]
[test_2d.drawImage.zerocanvas.html]
[test_2d.fill.winding.html]
[test_2d.gradient.radial.inside2.html]
skip-if = toolkit == "cocoa" || toolkit == "android" || toolkit == "gonk" # This is an issue with Quartz's handling of radial gradients and some numeric
# imprecision that results in errors here. SkiaGL (on Android/Gonk) also has
# a similar problem.

[test_2d.gradient.radial.inside3.html]
skip-if = toolkit == "cocoa" || toolkit == "android" || toolkit == "gonk" # This is an issue with Quartz's handling of radial gradients and some numeric
# imprecision that results in errors here. SkiaGL (on Android/Gonk) also has
# a similar problem.

[test_2d.gradient.radial.outside1.html]
skip-if = toolkit == "cocoa" || toolkit == "android" || toolkit == "gonk" # This is an issue with Quartz's handling of radial gradients and some numeric
# imprecision that results in errors here. SkiaGL (on Android/Gonk) also has
# a similar problem.

[test_2d.gradient.radial.outside2.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.gradient.radial.outside3.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.gradient.radial.cone.front.html]
skip-if = toolkit == "cocoa" || toolkit == "android" || toolkit == "gonk" # This is an issue with Quartz's handling of radial gradients and some numeric
# imprecision that results in errors here. SkiaGL (on Android/Gonk) also has
# a similar problem.

[test_2d.gradient.radial.cone.top.html]
skip-if = toolkit == "cocoa" || toolkit == "android" || toolkit == "gonk" # This is an issue with Quartz's handling of radial gradients and some numeric
# imprecision that results in errors here. SkiaGL (on Android/Gonk) also has
# a similar problem.

[test_2d.gradient.radial.touch1.html]
skip-if = true # These tests only pass on Mac OS X >= 10.5; see bug 450114
[test_2d.gradient.radial.touch2.html]
skip-if = true # These tests only pass on Mac OS X >= 10.5; see bug 450114
[test_2d.gradient.radial.touch3.html]
skip-if = true # These tests only pass on Mac OS X >= 10.5; see bug 450114
[test_2d.gradient.radial.equal.html]
skip-if = true # These tests only pass on Mac OS X >= 10.5; see bug 450114
[test_2d.isPointInPath.winding.html]
[test_2d.line.join.parallel.html]
skip-if = toolkit == "cocoa" # Fails on Mac (possibly because spec is underdefined?).  Bug 407105
# XXX vlad don't test this anywhere, cairo behaviour changed

[test_2d.line.cap.closed.html]
skip-if = toolkit = "cocoa" # This is another Quartz bug -- closed paths that don't lie fully within the
# destination bounds seem to have problems with the BEVEL/SQUARE join/cap combo.
# The joins are rendered as if with MITER; the correct behaviour is also seen
# if BUTT is used instead of SQUARE.

[test_2d.path.arc.shape.3.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.path.rect.selfintersect.html]
run-if toolkit == "cocoa" # Test only works on Mac - needs bug numbers.
[test_2d.gradient.radial.cone.shape2.html]
skip-if = true # These tests do not pass on any platform; Quartz backend won't pass them
# because we fall back to pixman when one circle doesn't contain the other.
# See bug 512647.

[test_2d.gradient.radial.cone.behind.html]
skip-if = true # These tests do not pass on any platform; Quartz backend won't pass them
# because we fall back to pixman when one circle doesn't contain the other.
# See bug 512647.
[test_2d.gradient.radial.cone.beside.html]
skip-if = true # These tests do not pass on any platform; Quartz backend won't pass them
# because we fall back to pixman when one circle doesn't contain the other.
# See bug 512647.

[test_2d.path.rect.zero.6.html]
skip-if = true # This test is bogus according to the spec; see bug 407107
[test_2d.strokeRect.zero.5.html]
[test_bug613794.html]
[test_bug753758.html]
[test_bug764125.html]
[test_bug856472.html]
[test_bug866575.html]
[test_bug902651.html]
[test_canvas.html]
[test_canvas_focusring.html]
[test_canvas_font_setter.html]
[test_canvas_strokeStyle_getter.html]
[test_drawImageIncomplete.html]
[test_drawImage_document_domain.html]
[test_drawImage_edge_cases.html]
[test_isPointInStroke.html]
[test_mozDashOffset.html]
[test_mozGetAsFile.html]
[test_strokeText_throw.html]
[test_toBlob.html]
[test_toDataURL_alpha.html]
[test_toDataURL_lowercase_ascii.html]
[test_toDataURL_parameters.html]
[test_windingRuleUndefined.html]
